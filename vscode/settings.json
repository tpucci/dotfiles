{
  "[css]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[html]": { "editor.defaultFormatter": "vscode.html-language-features" },
  "[javascriptreact]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[json]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[jsonc]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[markdown]": { "editor.defaultFormatter": "yzhang.markdown-all-in-one" },
  "[typescript]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[typescriptreact]": { "editor.defaultFormatter": "esbenp.prettier-vscode" },
  "[elixir]": { "editor.defaultFormatter": "JakeBecker.elixir-ls" },
  "[phoenix-heex]": {
    "editor.defaultFormatter": "RoyalMist.vscode-eex-format"
  },
  "[terraform]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file"
  },
  "[terraform-vars]": {
    "editor.defaultFormatter": "hashicorp.terraform",
    "editor.formatOnSave": true,
    "editor.formatOnSaveMode": "file"
  },
  "[dart]": {
    // Automatically format code on save and during typing of certain characters
    // (like `;` and `}`).
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.codeActionsOnSave": {
      "quickfix.insertSemicolon": true
    },

    // Draw a guide line at 80 characters, where Dart's formatting will wrap code.
    "editor.rulers": [80],

    // Disables built-in highlighting of words that match your selection. Without
    // this, all instances of the selected text will be highlighted, interfering
    // with Dart's ability to highlight only exact references to the selected variable.
    "editor.selectionHighlight": false,

    // By default, VS Code prevents code completion from popping open when in
    // "snippet mode" (editing placeholders in inserted code). Setting this option
    // to `false` stops that and allows completion to open as normal, as if you
    // weren't in a snippet placeholder.
    "editor.suggest.snippetsPreventQuickSuggestions": false,

    // By default, VS Code will pre-select the most recently used item from code
    // completion. This is usually not the most relevant item.
    //
    // "first" will always select top item
    // "recentlyUsedByPrefix" will filter the recently used items based on the
    //     text immediately preceding where completion was invoked.
    "editor.suggestSelection": "first",

    // Allows pressing <TAB> to complete snippets such as `for` even when the
    // completion list is not visible.
    "editor.tabCompletion": "onlySnippets",

    // By default, VS Code will populate code completion with words found in the
    // current file when a language service does not provide its own completions.
    // This results in code completion suggesting words when editing comments and
    // strings. This setting will prevent that.
    "editor.wordBasedSuggestions": false
  },
  "breadcrumbs.enabled": true,
  "debug.internalConsoleOptions": "openOnSessionStart",
  "debug.showInStatusBar": "never",
  "debug.toolBarLocation": "docked",
  "debug.openDebug": "openOnDebugBreak",
  "diffEditor.ignoreTrimWhitespace": true,
  "editor.cursorStyle": "line",
  "editor.fontFamily": "Fira Code",
  "editor.fontLigatures": true,
  "editor.formatOnSave": true,
  "editor.insertSpaces": false,
  "editor.lineNumbers": "on",
  "editor.minimap.enabled": false,
  "editor.renderControlCharacters": false,
  "editor.snippetSuggestions": "top",
  "editor.suggestSelection": "first",
  "editor.wordSeparators": "/\\()\"':,.;<>~!@#$%^&*|+=[]{}`?-",
  "editor.wordWrap": "off",
  "elixirLS.dialyzerEnabled": false,
  "elixirLS.fetchDeps": false,
  "elixirLS.suggestSpecs": false,
  "emmet.includeLanguages": {
    "phoenix-heex": "html"
  },
  "explorer.confirmDragAndDrop": false,
  "explorer.openEditors.visible": 0,
  "extensions.ignoreRecommendations": false,
  "files.associations": {
    "Fastfile": "ruby",
    ".arclint": "json",
    "*.leex": "phoenix-heex",
    "*.heex": "phoenix-heex"
  },
  "files.insertFinalNewline": true,
  "files.trimTrailingWhitespace": true,
  "editor.cursorSurroundingLines": 3,
  "files.watcherExclude": {
    "**/.git": true,
    "**/tmp/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/*.beam": true,
    "**/node_modules/**": true,
    "**/.elixir_ls": true
  },
  "search.exclude": {
    "**/.git": true,
    "**/tmp/**": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/*.beam": true,
    "**/node_modules": true,
    "**/.elixir_ls": true
  },
  "git.autofetch": true,
  "git.confirmSync": false,
  "gitblame.statusBarMessageFormat": "${author.name} ( ${time.ago} )",
  "gitlens.codeLens.enabled": false,
  "gitlens.currentLine.enabled": false,
  "gitlens.hovers.currentLine.enabled": false,
  "gitlens.hovers.currentLine.over": "line",
  "gitlens.keymap": "alternate",
  "javascript.format.enable": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.validate.enable": false,
  "liveshare.featureSet": "insiders",
  "redhat.telemetry.enabled": false,
  "tailwindCSS.includeLanguages": {
    "phoenix-heex": "html"
  },
  "terminal.explorerKind": "external",
  "terminal.external.osxExec": "iTerm.app",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.enableBell": true,
  "typescript.tsserver.log": "off",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "typescript.validate.enable": true,
  "vim.disableExtension": true,
  "vim.enableNeovim": true,
  "vim.neovimPath": "/usr/local/bin/nvim", // hide left icons
  "vsicons.dontShowNewVersionMessage": true,
  "workbench.activityBar.visible": false,
  "workbench.statusBar.visible": true,
  "workbench.colorCustomizations": {
    "editor.functionForeground": "ff0000",
    "statusBar.background": "#252526",
    "statusBar.noFolderBackground": "#212121",
    "statusBar.debuggingBackground": "#263238"
  },
  "workbench.editor.showTabs": true,
  "workbench.editorAssociations": { "*.ipynb": "jupyter.notebook.ipynb" },
  "workbench.iconTheme": "vscode-icons",
  "workbench.sideBar.location": "left",
  "workbench.startupEditor": "newUntitledFile",
  "zenMode.fullScreen": false,
  "zenMode.hideActivityBar": false,
  "zenMode.hideLineNumbers": false,
  "zenMode.hideStatusBar": false,
  "workbench.layoutControl.enabled": false,
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": "keyword.other.dotenv",
        "settings": {
          "foreground": "#FF000000"
        }
      }
    ]
  },
  "dart.debugExternalPackageLibraries": false,
  "dart.debugSdkLibraries": false,
  "git.openRepositoryInParentFolders": "always"
}
